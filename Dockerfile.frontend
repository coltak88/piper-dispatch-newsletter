# Frontend React Dockerfile
FROM node:18-alpine AS frontend-builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage with Nginx
FROM nginx:alpine AS frontend

# Install security updates
RUN apk --no-cache upgrade && \
    apk --no-cache add curl

# Create non-root user
RUN addgroup -g 1001 -S nginx && \
    adduser -S piper -u 1001 -G nginx

# Remove default nginx website
RUN rm -rf /usr/share/nginx/html/*

# Copy custom nginx configuration
COPY nginx/nginx.conf /etc/nginx/nginx.conf

# Copy built application from builder stage
COPY --from=frontend-builder --chown=piper:nginx /app/build /usr/share/nginx/html

# Create necessary directories
RUN mkdir -p /var/cache/nginx /var/log/nginx /var/run && \
    chown -R piper:nginx /var/cache/nginx /var/log/nginx /var/run /etc/nginx/conf.d

# Remove unnecessary nginx modules
RUN rm -f /etc/nginx/conf.d/default.conf

# Switch to non-root user
USER piper

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3000 || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]