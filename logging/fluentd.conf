# Fluentd Configuration for Piper Newsletter System
<source>
  @type tail
  path /var/log/app/app.log
  pos_file /var/log/fluentd/app.log.pos
  tag app.logs
  format json
  time_format %Y-%m-%d %H:%M:%S
  refresh_interval 5s
</source>

<source>
  @type tail
  path /var/log/nginx/access.log
  pos_file /var/log/fluentd/nginx.access.log.pos
  tag nginx.access
  format /^(?<remote_addr>[^ ]*) - (?<remote_user>[^ ]*) \[(?<time_local>[^\]]*)\] "(?<method>[^ ]*) (?<path>[^ ]*) (?<protocol>[^ ]*)" (?<status>[^ ]*) (?<body_bytes_sent>[^ ]*) "(?<http_referer>[^ ]*)" "(?<http_user_agent>[^ ]*)" "(?<http_x_forwarded_for>[^ ]*)" rt=(?<request_time>[^ ]*) uct="(?<upstream_connect_time>[^ ]*)" uht="(?<upstream_header_time>[^ ]*)" urt="(?<upstream_response_time>[^ ]*)"/
  time_format %d/%b/%Y:%H:%M:%S %z
  refresh_interval 5s
</source>

<source>
  @type tail
  path /var/log/nginx/error.log
  pos_file /var/log/fluentd/nginx.error.log.pos
  tag nginx.error
  format /^(?<time>[^ ]+ [^ ]+) \[(?<level>[^\]]+)\] (?<pid>\d+).(?<tid>\d+): (?<message>.*)$/
  time_format %Y/%m/%d %H:%M:%S
  refresh_interval 5s
</source>

<source>
  @type tail
  path /var/log/postgresql/postgresql.log
  pos_file /var/log/fluentd/postgresql.log.pos
  tag postgresql.logs
  format multiline
  format_firstline /^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}/
  format1 /^(?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) (?<timezone>\w+) \[(?<level>[^\]]+)\]: (?<message>.*)$/
  time_format %Y-%m-%d %H:%M:%S
  refresh_interval 5s
</source>

<source>
  @type tail
  path /var/log/redis/redis.log
  pos_file /var/log/fluentd/redis.log.pos
  tag redis.logs
  format multiline
  format_firstline /^\d{2}:\w{3}\d{2}/
  format1 /^(?<time>\d{2}:\w{3}\d{2}) (?<pid>\d+)\:(?<tid>\d+) (?<level>\w+) (?<message>.*)$/
  refresh_interval 5s
</source>

# Filter for application logs
<filter app.logs>
  @type record_transformer
  <record>
    hostname ${hostname}
    service piper-newsletter
    environment production
  </record>
</filter>

# Filter for nginx access logs
<filter nginx.access>
  @type record_transformer
  <record>
    hostname ${hostname}
    service nginx
    environment production
    log_type access
  </record>
</filter>

# Filter for nginx error logs
<filter nginx.error>
  @type record_transformer
  <record>
    hostname ${hostname}
    service nginx
    environment production
    log_type error
  </record>
</filter>

# Filter for PostgreSQL logs
<filter postgresql.logs>
  @type record_transformer
  <record>
    hostname ${hostname}
    service postgresql
    environment production
  </record>
</filter>

# Filter for Redis logs
<filter redis.logs>
  @type record_transformer
  <record>
    hostname ${hostname}
    service redis
    environment production
  </record>
</filter>

# Parse error levels
<filter **>
  @type grep
  <regexp>
    key level
    pattern ^(ERROR|CRITICAL|FATAL)$
  </regexp>
</filter>

# Output to Elasticsearch
<match **>
  @type elasticsearch
  host elasticsearch
  port 9200
  user elastic
  password changeme
  index_name piper-newsletter-logs
  type_name _doc
  logstash_format true
  logstash_prefix piper-newsletter
  logstash_dateformat %Y.%m.%d
  include_tag_key true
  tag_key @log_name
  <buffer>
    @type file
    path /var/log/fluentd/buffer/elasticsearch
    flush_interval 10s
    retry_limit 17
    retry_max_interval 65536
    retry_exponential_backoff true
  </buffer>
</match>