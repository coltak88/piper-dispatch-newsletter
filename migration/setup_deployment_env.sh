#!/bin/bash

# 🚀 Post-Migration Deployment Environment Setup Script
# This script helps configure the deployment environment after migration to rasa-x-machina

set -e

echo "🚀 Starting Post-Migration Deployment Setup..."
echo "Organization: rasa-x-machina"
echo "Repository: piper-dispatch-newsletter"
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_info() {
    echo -e "${BLUE}ℹ️  $1${NC}"
}

# Function to setup deployment environment
setup_deployment_env() {
    print_info "Setting up deployment environment..."
    
    # Create production environment file if it doesn't exist
    local env_file=".env.production"
    if [[ ! -f "$env_file" ]]; then
        print_info "Creating $env_file..."
        cat > "$env_file" << EOF
# Production Environment Configuration
# Generated by post-migration setup script

# Organization Configuration
ORGANIZATION_NAME=rasa-x-machina
REPOSITORY_NAME=piper-dispatch-newsletter
DOMAIN_URL=https://rasa-x-machina.github.io/piper-dispatch-newsletter

# GitHub Configuration
GITHUB_OWNER=rasa-x-machina
GITHUB_REPO=piper-dispatch-newsletter
GITHUB_API_URL=https://api.github.com/repos/rasa-x-machina/piper-dispatch-newsletter

# Deployment Configuration
DEPLOYMENT_ENVIRONMENT=production
DEPLOYMENT_TARGET=github-pages
BUILD_PATH=./build

# Security Configuration (UPDATE THESE VALUES)
JWT_SECRET=your-jwt-secret-here
ENCRYPTION_KEY=your-encryption-key-here
API_KEY=your-api-key-here

# Database Configuration (if applicable)
DATABASE_URL=your-database-url-here
REDIS_URL=your-redis-url-here

# Email Service Configuration
EMAIL_SERVICE_URL=https://api.rasa-x-machina.org/email
EMAIL_API_KEY=your-email-api-key-here

# Monitoring Configuration
SENTRY_DSN=your-sentry-dsn-here
ANALYTICS_ID=your-analytics-id-here
EOF
        print_status "Created $env_file with default configuration"
        print_warning "Please update the placeholder values in $env_file"
    else
        print_status "$env_file already exists"
    fi

    return 0
}

# Function to test build
test_build() {
    print_info "Testing build process..."
    
    # Check if package.json exists
    if [[ ! -f "package.json" ]]; then
        print_error "package.json not found"
        return 1
    fi

    # Install dependencies
    print_info "Installing dependencies..."
    if npm install; then
        print_status "Dependencies installed successfully"
    else
        print_error "Failed to install dependencies"
        return 1
    fi

    # Test build
    print_info "Running build..."
    if npm run build; then
        print_status "Build completed successfully"
    else
        print_error "Build failed"
        return 1
    fi

    return 0
}

# Main execution
main() {
    echo "🚀 Piper Dispatch Newsletter - Post-Migration Setup"
    echo "=================================================="
    echo ""

    # Check prerequisites
    if ! command -v node >/dev/null 2>&1; then
        print_error "Node.js not found. Please install Node.js first."
        exit 1
    fi

    if ! command -v npm >/dev/null 2>&1; then
        print_error "npm not found. Please install npm first."
        exit 1
    fi

    print_status "Prerequisites check passed"

    # Run setup steps
    setup_deployment_env
    test_build

    echo ""
    echo "=================================================="
    print_status "Post-migration setup completed!"
    echo ""
    print_info "Next steps:"
    echo "1. Update the placeholder values in .env.production"
    echo "2. Configure GitHub repository secrets"
    echo "3. Test the deployment workflow"
    echo "4. Monitor the application after deployment"
    echo ""
    print_info "For support, check the POST_MIGRATION_CHECKLIST.md file"
}

# Run main function
main "$@"